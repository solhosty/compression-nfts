import * as beet from '@metaplex-foundation/beet';
import { PublicKey } from '@solana/web3.js';
import { Path } from './Path';
/**
 * ChangeLog information necessary for deserializing an on-chain ConcurrentMerkleTree
 * @private
 */
export declare type ChangeLogInternal = {
    root: PublicKey;
    pathNodes: PublicKey[];
    index: number;
    _padding: number;
};
/**
 * ConcurrentMerkleTree fields necessary for deserializing an on-chain ConcurrentMerkleTree
 */
export declare type ConcurrentMerkleTree = {
    sequenceNumber: beet.bignum;
    activeIndex: beet.bignum;
    bufferSize: beet.bignum;
    changeLogs: ChangeLogInternal[];
    rightMostPath: Path;
};
/**
 * Factory function for generating a `beet` that can deserialize
 * an on-chain {@link ConcurrentMerkleTree}
 *
 * @param maxDepth
 * @param maxBufferSize
 * @returns
 */
export declare const concurrentMerkleTreeBeetFactory: (maxDepth: number, maxBufferSize: number) => beet.BeetArgsStruct<ConcurrentMerkleTree>;
//# sourceMappingURL=ConcurrentMerkleTree.d.ts.map