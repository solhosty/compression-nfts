import * as beet from '@metaplex-foundation/beet';
import * as beetSolana from '@metaplex-foundation/beet-solana';
import { pathBeetFactory } from './Path';
const changeLogBeetFactory = (maxDepth) => {
    return new beet.BeetArgsStruct([
        ['root', beetSolana.publicKey],
        ['pathNodes', beet.uniformFixedSizeArray(beetSolana.publicKey, maxDepth)],
        ['index', beet.u32],
        ['_padding', beet.u32],
    ], 'ChangeLog');
};
/**
 * Factory function for generating a `beet` that can deserialize
 * an on-chain {@link ConcurrentMerkleTree}
 *
 * @param maxDepth
 * @param maxBufferSize
 * @returns
 */
export const concurrentMerkleTreeBeetFactory = (maxDepth, maxBufferSize) => {
    return new beet.BeetArgsStruct([
        ['sequenceNumber', beet.u64],
        ['activeIndex', beet.u64],
        ['bufferSize', beet.u64],
        [
            'changeLogs',
            beet.uniformFixedSizeArray(changeLogBeetFactory(maxDepth), maxBufferSize),
        ],
        ['rightMostPath', pathBeetFactory(maxDepth)],
    ], 'ConcurrentMerkleTree');
};
//# sourceMappingURL=ConcurrentMerkleTree.js.map