"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.canopyBeetFactory = void 0;
const beet = __importStar(require("@metaplex-foundation/beet"));
/**
 * Factory function for generating a `beet` that can deserialize
 * an on-chain {@link Canopy}
 *
 * {@link Canopy} of depth `N` is an on-chain cache of the top
 * `N` nodes in the {@link ConcurrentMerkleTree}. This is a total
 * of `2^(N+1) - 1` nodes. Each node has `32` bytes.
 * However, the current root of the tree is always stored in the
 * most recent {@link ChangeLog}, so we only need to cache the remaining `N-1` levels.
 *
 * The final formula for account size in bytes: `(2^(N) - 1 - 1) * 32`.
 *
 * @param canopyDepth
 * @returns
 */
const canopyBeetFactory = (canopyDepth) => {
    return new beet.BeetArgsStruct([
        [
            'canopyBytes',
            beet.uniformFixedSizeArray(beet.u8, Math.max(((1 << (canopyDepth + 1)) - 2) * 32, 0)),
        ],
    ], 'Canopy');
};
exports.canopyBeetFactory = canopyBeetFactory;
//# sourceMappingURL=Canopy.js.map