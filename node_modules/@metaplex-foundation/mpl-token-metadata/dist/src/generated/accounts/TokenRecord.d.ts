/// <reference types="node" />
import * as beet from '@metaplex-foundation/beet';
import * as web3 from '@solana/web3.js';
import * as beetSolana from '@metaplex-foundation/beet-solana';
import { Key } from '../types/Key';
import { TokenState } from '../types/TokenState';
import { TokenDelegateRole } from '../types/TokenDelegateRole';
export type TokenRecordArgs = {
    key: Key;
    bump: number;
    state: TokenState;
    ruleSetRevision: beet.COption<beet.bignum>;
    delegate: beet.COption<web3.PublicKey>;
    delegateRole: beet.COption<TokenDelegateRole>;
    lockedTransfer: beet.COption<web3.PublicKey>;
};
export declare class TokenRecord implements TokenRecordArgs {
    readonly key: Key;
    readonly bump: number;
    readonly state: TokenState;
    readonly ruleSetRevision: beet.COption<beet.bignum>;
    readonly delegate: beet.COption<web3.PublicKey>;
    readonly delegateRole: beet.COption<TokenDelegateRole>;
    readonly lockedTransfer: beet.COption<web3.PublicKey>;
    private constructor();
    static fromArgs(args: TokenRecordArgs): TokenRecord;
    static fromAccountInfo(accountInfo: web3.AccountInfo<Buffer>, offset?: number): [TokenRecord, number];
    static fromAccountAddress(connection: web3.Connection, address: web3.PublicKey, commitmentOrConfig?: web3.Commitment | web3.GetAccountInfoConfig): Promise<TokenRecord>;
    static gpaBuilder(programId?: web3.PublicKey): beetSolana.GpaBuilder<TokenRecordArgs>;
    static deserialize(buf: Buffer, offset?: number): [TokenRecord, number];
    serialize(): [Buffer, number];
    static byteSize(args: TokenRecordArgs): number;
    static getMinimumBalanceForRentExemption(args: TokenRecordArgs, connection: web3.Connection, commitment?: web3.Commitment): Promise<number>;
    pretty(): {
        key: string;
        bump: number;
        state: string;
        ruleSetRevision: beet.bignum;
        delegate: web3.PublicKey;
        delegateRole: TokenDelegateRole;
        lockedTransfer: web3.PublicKey;
    };
}
export declare const tokenRecordBeet: beet.FixableBeetStruct<TokenRecord, TokenRecordArgs>;
