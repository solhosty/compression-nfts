import * as beet from '@metaplex-foundation/beet';
import * as web3 from '@solana/web3.js';
import { AuthorizationData } from './AuthorizationData';
export type DelegateArgsRecord = {
    CollectionV1: {
        authorizationData: beet.COption<AuthorizationData>;
    };
    SaleV1: {
        amount: beet.bignum;
        authorizationData: beet.COption<AuthorizationData>;
    };
    TransferV1: {
        amount: beet.bignum;
        authorizationData: beet.COption<AuthorizationData>;
    };
    UpdateV1: {
        authorizationData: beet.COption<AuthorizationData>;
    };
    UtilityV1: {
        amount: beet.bignum;
        authorizationData: beet.COption<AuthorizationData>;
    };
    StakingV1: {
        amount: beet.bignum;
        authorizationData: beet.COption<AuthorizationData>;
    };
    StandardV1: {
        amount: beet.bignum;
    };
    LockedTransferV1: {
        amount: beet.bignum;
        lockedAddress: web3.PublicKey;
        authorizationData: beet.COption<AuthorizationData>;
    };
    ProgrammableConfigV1: {
        authorizationData: beet.COption<AuthorizationData>;
    };
};
export type DelegateArgs = beet.DataEnumKeyAsKind<DelegateArgsRecord>;
export declare const isDelegateArgsCollectionV1: (x: DelegateArgs) => x is {
    __kind: "CollectionV1";
} & Omit<{
    authorizationData: beet.COption<AuthorizationData>;
}, "void"> & {
    __kind: 'CollectionV1';
};
export declare const isDelegateArgsSaleV1: (x: DelegateArgs) => x is {
    __kind: "SaleV1";
} & Omit<{
    amount: beet.bignum;
    authorizationData: beet.COption<AuthorizationData>;
}, "void"> & {
    __kind: 'SaleV1';
};
export declare const isDelegateArgsTransferV1: (x: DelegateArgs) => x is {
    __kind: "TransferV1";
} & Omit<{
    amount: beet.bignum;
    authorizationData: beet.COption<AuthorizationData>;
}, "void"> & {
    __kind: 'TransferV1';
};
export declare const isDelegateArgsUpdateV1: (x: DelegateArgs) => x is {
    __kind: "UpdateV1";
} & Omit<{
    authorizationData: beet.COption<AuthorizationData>;
}, "void"> & {
    __kind: 'UpdateV1';
};
export declare const isDelegateArgsUtilityV1: (x: DelegateArgs) => x is {
    __kind: "UtilityV1";
} & Omit<{
    amount: beet.bignum;
    authorizationData: beet.COption<AuthorizationData>;
}, "void"> & {
    __kind: 'UtilityV1';
};
export declare const isDelegateArgsStakingV1: (x: DelegateArgs) => x is {
    __kind: "StakingV1";
} & Omit<{
    amount: beet.bignum;
    authorizationData: beet.COption<AuthorizationData>;
}, "void"> & {
    __kind: 'StakingV1';
};
export declare const isDelegateArgsStandardV1: (x: DelegateArgs) => x is {
    __kind: "StandardV1";
} & Omit<{
    amount: beet.bignum;
}, "void"> & {
    __kind: 'StandardV1';
};
export declare const isDelegateArgsLockedTransferV1: (x: DelegateArgs) => x is {
    __kind: "LockedTransferV1";
} & Omit<{
    amount: beet.bignum;
    lockedAddress: web3.PublicKey;
    authorizationData: beet.COption<AuthorizationData>;
}, "void"> & {
    __kind: 'LockedTransferV1';
};
export declare const isDelegateArgsProgrammableConfigV1: (x: DelegateArgs) => x is {
    __kind: "ProgrammableConfigV1";
} & Omit<{
    authorizationData: beet.COption<AuthorizationData>;
}, "void"> & {
    __kind: 'ProgrammableConfigV1';
};
export declare const delegateArgsBeet: beet.FixableBeet<DelegateArgs, DelegateArgs>;
