import * as web3 from '@solana/web3.js';
import * as beet from '@metaplex-foundation/beet';
import { SeedsVec } from './SeedsVec';
import { LeafInfo } from './LeafInfo';
export type PayloadTypeRecord = {
    Pubkey: {
        fields: [web3.PublicKey];
    };
    Seeds: {
        fields: [SeedsVec];
    };
    MerkleProof: {
        fields: [LeafInfo];
    };
    Number: {
        fields: [beet.bignum];
    };
};
export type PayloadType = beet.DataEnumKeyAsKind<PayloadTypeRecord>;
export declare const isPayloadTypePubkey: (x: PayloadType) => x is {
    __kind: "Pubkey";
} & Omit<{
    fields: [web3.PublicKey];
}, "void"> & {
    __kind: 'Pubkey';
};
export declare const isPayloadTypeSeeds: (x: PayloadType) => x is {
    __kind: "Seeds";
} & Omit<{
    fields: [SeedsVec];
}, "void"> & {
    __kind: 'Seeds';
};
export declare const isPayloadTypeMerkleProof: (x: PayloadType) => x is {
    __kind: "MerkleProof";
} & Omit<{
    fields: [LeafInfo];
}, "void"> & {
    __kind: 'MerkleProof';
};
export declare const isPayloadTypeNumber: (x: PayloadType) => x is {
    __kind: "Number";
} & Omit<{
    fields: [beet.bignum];
}, "void"> & {
    __kind: 'Number';
};
export declare const payloadTypeBeet: beet.FixableBeet<PayloadType, PayloadType>;
