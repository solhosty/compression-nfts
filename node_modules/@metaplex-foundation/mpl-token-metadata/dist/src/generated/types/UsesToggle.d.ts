import * as beet from '@metaplex-foundation/beet';
import { Uses } from './Uses';
export type UsesToggleRecord = {
    None: void;
    Clear: void;
    Set: {
        fields: [Uses];
    };
};
export type UsesToggle = beet.DataEnumKeyAsKind<UsesToggleRecord>;
export declare const isUsesToggleNone: (x: UsesToggle) => x is {
    __kind: "None";
} & Omit<void, "void"> & {
    __kind: 'None';
};
export declare const isUsesToggleClear: (x: UsesToggle) => x is {
    __kind: "Clear";
} & Omit<void, "void"> & {
    __kind: 'Clear';
};
export declare const isUsesToggleSet: (x: UsesToggle) => x is {
    __kind: "Set";
} & Omit<{
    fields: [Uses];
}, "void"> & {
    __kind: 'Set';
};
export declare const usesToggleBeet: beet.FixableBeet<UsesToggle, UsesToggle>;
