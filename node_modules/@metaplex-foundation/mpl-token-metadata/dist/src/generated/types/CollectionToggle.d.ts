import * as beet from '@metaplex-foundation/beet';
import { Collection } from './Collection';
export type CollectionToggleRecord = {
    None: void;
    Clear: void;
    Set: {
        fields: [Collection];
    };
};
export type CollectionToggle = beet.DataEnumKeyAsKind<CollectionToggleRecord>;
export declare const isCollectionToggleNone: (x: CollectionToggle) => x is {
    __kind: "None";
} & Omit<void, "void"> & {
    __kind: 'None';
};
export declare const isCollectionToggleClear: (x: CollectionToggle) => x is {
    __kind: "Clear";
} & Omit<void, "void"> & {
    __kind: 'Clear';
};
export declare const isCollectionToggleSet: (x: CollectionToggle) => x is {
    __kind: "Set";
} & Omit<{
    fields: [Collection];
}, "void"> & {
    __kind: 'Set';
};
export declare const collectionToggleBeet: beet.FixableBeet<CollectionToggle, CollectionToggle>;
